# reload the tmux.conf and display a message to that effect
bind r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf"

# source colorscheme
set -g default-terminal 'screen-256color'
source-file ~/.tmux_dark.conf

# remap prefix from CTRL-B to CTRL+Spacebar {{{
set -g prefix C-Space
unbind C-b
# }}}

# configure default limits/times {{{
# Set scrollback buffer to 10000
set -g history-limit 10000
# No delay for escape key press
set -sg escape-time 0
# When using repeatable commands (like resizing) repeat-time is the duration of
# the window (in milliseconds) for which a repeat can be made (default is 500)
set -g repeat-time 1000
# If I want to switch to another pane while in a fzf list, I can do prefix+q,
# then hit the number of the pane I want. Make those numbers last a bit longer.
# (I can always press escape to make them turn off immediately)
set -g display-panes-time 3000
# }}}

# pane and window indexing {{{
# Set the base index for windows to 1 instead of 0
set -g base-index 1
# Set the base index for panes to 1 instead of 0
set-window-option -g pane-base-index 1
# }}}

# pane navigation {{{
# allow the vim pluging 'tmux-plugins/vim-tmux-focus-events' to work
set -g focus-events on
# split panes using | and - {{{
%if "#{==:#{host},office}"
# ubuntu 20.04 
bind '\' split-window -h
%endif
%if "#{!=:#{host},office}"
# ubuntu 18.04 and debian buster
bind \ split-window -h
%endif

bind - split-window -v
unbind '"'
unbind %	
# }}}

# Pane resizing with prefix + H/J/K/L: {{{
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -r K resize-pane -U 3
bind -r J resize-pane -D 3
# }}}
 
# Smart pane switching with awareness of Vim splits and fzf windows. {{{

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# See: https://github.com/keeganlow/dotfiles/blob/master/.tmux.conf
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind-key -n 'C-k' if-shell "($is_vim || $is_fzf)" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-j' if-shell "($is_vim || $is_fzf)" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# go to last pane (like b# in vim)
bind '#' select-pane -l
# }}}
# }}}

# visually select and yank to system clipboard {{{
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i'
# like visual block mode
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# I think I might overwrite the lower case p for 'previous window', since I
# can just use next/numbers to swtich
bind P paste-buffer
# }}}

